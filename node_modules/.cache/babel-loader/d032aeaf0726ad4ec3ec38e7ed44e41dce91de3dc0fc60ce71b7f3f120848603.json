{"ast":null,"code":"var _jsxFileName = \"D:\\\\Frontend\\\\Week23\\\\week23\\\\proect_study\\\\study\\\\src\\\\component\\\\TextField\\\\TextField.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextField(props) {\n  const {\n    english,\n    transcription,\n    russian,\n    boolean\n  } = props;\n  function handleClose() {\n    setIsSelected(!isSelected);\n    setValue({\n      ...rowData\n    });\n  }\n  function handleSave() {\n    setValue({\n      ...value\n    });\n    setIsSelected(!isSelected);\n  }\n  function handleEdit() {\n    setIsSelected(!isSelected);\n  }\n  function handleChange(event) {\n    setValue(prevValue => {\n      return {\n        ...prevValue,\n        [event.target.english]: event.target.russian\n      };\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        children: props.english\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        children: [\" \", props.transcription]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        children: [\" \", props.russian]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn_save\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 1\n  }, this);\n}\n_c = TextField;\nexport default TextField;\nvar _c;\n$RefreshReg$(_c, \"TextField\");","map":{"version":3,"names":["TextField","props","english","transcription","russian","boolean","handleClose","setIsSelected","isSelected","setValue","rowData","handleSave","value","handleEdit","handleChange","event","prevValue","target","_jsxDEV","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Frontend/Week23/week23/proect_study/study/src/component/TextField/TextField.jsx"],"sourcesContent":["function TextField (props) {\r\n    const {english, transcription, russian, boolean } = props;\r\n\r\n    \r\n    function handleClose() {\r\n        setIsSelected(!isSelected);\r\n        setValue({ ...rowData });\r\n      }\r\n      function handleSave() {\r\n        setValue({...value});\r\n        setIsSelected(!isSelected);\r\n      }\r\n    \r\n      function handleEdit() {\r\n        setIsSelected(!isSelected);\r\n      }\r\n    \r\n      function handleChange(event) {\r\n        setValue((prevValue) => {\r\n          return { ...prevValue, [event.target.english]: event.target.russian };\r\n        });\r\n      }\r\n      \r\nreturn (\r\n<section >\r\n<div className='row'> \r\n   <div className =\"cell\">{props.english}</div>\r\n   <div className =\"cell\"> {props.transcription}</div>\r\n    <div className =\"cell\"> {props.russian}</div>\r\n    <div className =\"cell\"><button className= 'btn'>Edit</button><button className= 'btn_save'>Save</button></div>\r\n</div>\r\n</section>\r\n);\r\n}\r\nexport default TextField"],"mappings":";;AAAA,SAASA,SAASA,CAAEC,KAAK,EAAE;EACvB,MAAM;IAACC,OAAO;IAAEC,aAAa;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGJ,KAAK;EAGzD,SAASK,WAAWA,CAAA,EAAG;IACnBC,aAAa,CAAC,CAACC,UAAU,CAAC;IAC1BC,QAAQ,CAAC;MAAE,GAAGC;IAAQ,CAAC,CAAC;EAC1B;EACA,SAASC,UAAUA,CAAA,EAAG;IACpBF,QAAQ,CAAC;MAAC,GAAGG;IAAK,CAAC,CAAC;IACpBL,aAAa,CAAC,CAACC,UAAU,CAAC;EAC5B;EAEA,SAASK,UAAUA,CAAA,EAAG;IACpBN,aAAa,CAAC,CAACC,UAAU,CAAC;EAC5B;EAEA,SAASM,YAAYA,CAACC,KAAK,EAAE;IAC3BN,QAAQ,CAAEO,SAAS,IAAK;MACtB,OAAO;QAAE,GAAGA,SAAS;QAAE,CAACD,KAAK,CAACE,MAAM,CAACf,OAAO,GAAGa,KAAK,CAACE,MAAM,CAACb;MAAQ,CAAC;IACvE,CAAC,CAAC;EACJ;EAEN,oBACAc,OAAA;IAAAC,QAAA,eACAD,OAAA;MAAKE,SAAS,EAAC,KAAK;MAAAD,QAAA,gBACjBD,OAAA;QAAKE,SAAS,EAAE,MAAM;QAAAD,QAAA,EAAElB,KAAK,CAACC;MAAO;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5CN,OAAA;QAAKE,SAAS,EAAE,MAAM;QAAAD,QAAA,GAAC,GAAC,EAAClB,KAAK,CAACE,aAAa;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClDN,OAAA;QAAKE,SAAS,EAAE,MAAM;QAAAD,QAAA,GAAC,GAAC,EAAClB,KAAK,CAACG,OAAO;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7CN,OAAA;QAAKE,SAAS,EAAE,MAAM;QAAAD,QAAA,gBAACD,OAAA;UAAQE,SAAS,EAAE,KAAK;UAAAD,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAAAN,OAAA;UAAQE,SAAS,EAAE,UAAU;UAAAD,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7G;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEV;AAACC,EAAA,GAjCQzB,SAAS;AAkClB,eAAeA,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}