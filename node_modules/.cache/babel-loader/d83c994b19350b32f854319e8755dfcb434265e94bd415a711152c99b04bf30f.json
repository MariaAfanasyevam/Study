{"ast":null,"code":"var _jsxFileName = \"D:\\\\Frontend\\\\Week23\\\\week23\\\\proect_study\\\\study\\\\src\\\\component\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport styles from './card.css';\nimport Input from '../Input/Input';\nimport TextField from '../TextField/TextField';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Card({\n  word\n}) {\n  _s();\n  const {\n    id,\n    english,\n    transcription,\n    russian\n  } = word;\n  const [isClicked, btnIsClicked] = useState(false);\n  const [value, setValue] = useState({\n    id,\n    english,\n    transcription,\n    russian\n  });\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setValue(prevWord => {\n      return {\n        ...prevWord,\n        [name]: value\n      };\n    });\n  };\n  const handleCancel = () => {\n    btnIsClicked(!isClicked);\n    setValue({\n      ...word\n    });\n  };\n  const updateWord = () => {\n    handleSave(value);\n    btnIsClicked(false);\n  };\n  const handleEdit = () => {\n    btnIsClicked(!isClicked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), isClicked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          onChange: handleChange,\n          value: value.english,\n          name: \"english\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          onChange: handleChange,\n          value: value.transcription,\n          name: \"transcription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          onChange: handleChange,\n          value: value.russian,\n          name: \"russian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: value.english\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: value.transcription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: value.russian\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Card, \"IevFeFIpG2q/JFoDiKTfg3VZFdM=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["styles","Input","TextField","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","word","_s","id","english","transcription","russian","isClicked","btnIsClicked","value","setValue","handleChange","e","name","target","prevWord","handleCancel","updateWord","handleSave","handleEdit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","className","onChange","_c","$RefreshReg$"],"sources":["D:/Frontend/Week23/week23/proect_study/study/src/component/Card/Card.jsx"],"sourcesContent":["import  styles from './card.css'\r\nimport Input from '../Input/Input';\r\nimport TextField from '../TextField/TextField';\r\nimport { useState } from \"react\";\r\n\r\nfunction Card ({ word }) {\r\n    const {id, english, transcription, russian } = word;\r\n    const [isClicked, btnIsClicked] = useState (false);\r\n    const [value, setValue] = useState({\r\n        id,\r\n        english,\r\n        transcription,\r\n        russian,\r\n    });\r\n\r\nconst handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setValue((prevWord) => {\r\n        return { ...prevWord, [name]: value };\r\n    });\r\n};\r\n    const handleCancel = () => {\r\n        btnIsClicked(!isClicked);\r\n        setValue({ ...word });\r\n    };\r\n    const updateWord = () => {\r\n        handleSave(value);\r\n        btnIsClicked(false);\r\n    }\r\n\r\n    const handleEdit = () => {\r\n       btnIsClicked(!isClicked);\r\n    }\r\n    return (\r\n        <tr>\r\n            <td>{id}</td>\r\n            {isClicked\r\n                ? (\r\n                    <>\r\n                        <td>\r\n                         \r\n                            <input type=\"text\"\r\n                                className=\"input-field\"\r\n                                onChange={handleChange}\r\n                                value={value.english}\r\n                                name=\"english\">\r\n                            </input>\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\"\r\n                                className=\"input-field\"\r\n                                onChange={handleChange}\r\n                                value={value.transcription}\r\n                                name=\"transcription\">\r\n                            </input>\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\"\r\n                                className=\"input-field\"\r\n                                onChange={handleChange}\r\n                                value={value.russian}\r\n                                name=\"russian\">\r\n                            </input>\r\n                        </td>\r\n                    </>\r\n                )\r\n                : (\r\n                    <>\r\n                        <td>{value.english}</td>\r\n                        <td>{value.transcription}</td>\r\n                        <td>{value.russian}</td>\r\n                    </>\r\n                )}\r\n\r\n            {/* <td >\r\n                {isClicked\r\n                    ? (\r\n                        <div>\r\n                            <button\r\n                                name={\"Save\"}\r\n                              //  disabled={isDisabled}\r\n                                onClick={updateWord}\r\n                            //onClick={() => { setPressed(false); }}\r\n                            />\r\n                            <button\r\n                                name={\"Cancel\"}\r\n                                onClick={handleCancel} />\r\n                        </div>)\r\n                    : (\r\n                        <div >\r\n                            <button\r\n                                name={\"Delete\"}\r\n                                onClick={() => handleDelete(id)} />\r\n                            <button\r\n                                name={\"Edit\"}\r\n                                onClick={handleEdit} />\r\n                        </div>\r\n                    )}\r\n            </td> */}\r\n        </tr>\r\n    );\r\n}\r\nexport default Card"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}