{"ast":null,"code":"var _jsxFileName = \"D:\\\\Frontend\\\\Week23\\\\week23\\\\proect_study\\\\study\\\\src\\\\component\\\\Card\\\\Table.jsx\";\nimport React, { useState } from \"react\";\nimport TableRow from './';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  cards\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"N/N\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Speed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Buttons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), cards.map(card => {\n        return /*#__PURE__*/_jsxDEV(TableRow, {\n          rowData: card\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Table;\nexport default Table;\nconst CardWrapper = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c2 = CardWrapper;\nconst Card = ({\n  english\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: english\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Card;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"CardWrapper\");\n$RefreshReg$(_c3, \"Card\");","map":{"version":3,"names":["React","useState","TableRow","jsxDEV","_jsxDEV","Fragment","_Fragment","Table","cards","children","border","fileName","_jsxFileName","lineNumber","columnNumber","map","card","rowData","id","_c","CardWrapper","Card","_c2","english","_c3","$RefreshReg$"],"sources":["D:/Frontend/Week23/week23/proect_study/study/src/component/Card/Table.jsx"],"sourcesContent":["import React, { useState} from \"react\";\r\nimport TableRow from './'\r\nconst Table = ({ cards }) => {\r\n  return (\r\n    <div>\r\n      <table border='1'>\r\n        <tr>\r\n          <th>N/N</th>\r\n          <th>Name</th>\r\n          <th>Price</th>\r\n          <th>Speed</th>\r\n          <th>Buttons</th>\r\n        </tr>\r\n        {cards.map((card) => {\r\n          return <TableRow rowData={card} key={card.id} />;\r\n        })}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n\r\n\r\n\r\nconst CardWrapper=()=>{\r\n\r\n  \r\n  return(\r\n    <>\r\n    <button>Next</button>\r\n    <Card />\r\n    <button>Previous</button>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst Card =({english})=>{\r\n  return(\r\n    <div>{english}</div>\r\n  )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,OAAOC,QAAQ,MAAM,IAAI;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACzB,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC3B,oBACEJ,OAAA;IAAAK,QAAA,eACEL,OAAA;MAAOM,MAAM,EAAC,GAAG;MAAAD,QAAA,gBACfL,OAAA;QAAAK,QAAA,gBACEL,OAAA;UAAAK,QAAA,EAAI;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACZV,OAAA;UAAAK,QAAA,EAAI;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbV,OAAA;UAAAK,QAAA,EAAI;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdV,OAAA;UAAAK,QAAA,EAAI;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdV,OAAA;UAAAK,QAAA,EAAI;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,EACJN,KAAK,CAACO,GAAG,CAAEC,IAAI,IAAK;QACnB,oBAAOZ,OAAA,CAACF,QAAQ;UAACe,OAAO,EAAED;QAAK,GAAMA,IAAI,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAClD,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACK,EAAA,GAjBIZ,KAAK;AAmBX,eAAeA,KAAK;AAIpB,MAAMa,WAAW,GAACA,CAAA,KAAI;EAGpB,oBACEhB,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACAL,OAAA;MAAAK,QAAA,EAAQ;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrBV,OAAA,CAACiB,IAAI;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACRV,OAAA;MAAAK,QAAA,EAAQ;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAEvB,CAAC;AAEP,CAAC;AAAAQ,GAAA,GAXKF,WAAW;AAgBjB,MAAMC,IAAI,GAAEA,CAAC;EAACE;AAAO,CAAC,KAAG;EACvB,oBACEnB,OAAA;IAAAK,QAAA,EAAMc;EAAO;IAAAZ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAExB,CAAC;AAAAU,GAAA,GAJKH,IAAI;AAAA,IAAAF,EAAA,EAAAG,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}