{"ast":null,"code":"var _jsxFileName = \"D:\\\\Frontend\\\\Week23\\\\week23\\\\proect_study\\\\study\\\\src\\\\component\\\\Card\\\\Card.jsx\";\nimport styles from './card.css';\nimport Input from '../Input/Input';\nimport TextField from '../TextField/TextField';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [isClicked, btnIsClicked] = useState(false);\nfunction Card(props) {\n  const {\n    english,\n    transcription,\n    russian,\n    tags,\n    boolean\n  } = props;\n  let actionItem;\n  /* if (props.boolean === 'true') \r\n   {\r\n       actionItem = <TextField english={english} transcription={transcription} russian={russian} tags={tags} boolean={boolean}/>\r\n   }\r\n   else  \r\n   {\r\n       actionItem = <Input/>;\r\n   }\r\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [\"isClicked ? (\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row className1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: props.english\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [\" \", props.transcription]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [\" \", props.russian]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: props.boolean\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn_save\",\n            children: \" Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => btnIsClicked(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 83\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), \"):(\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"inputText\",\n            type: \"text\",\n            value: \"english\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [\"  \", /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"inputText\",\n            type: \"text\",\n            value: \"transcription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"inputText\",\n            type: \"text\",\n            value: \"russian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"inputText\",\n            type: \"text\",\n            value: \"boolean\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn_save\",\n            children: \" Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 77\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), \")   \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), \"/* \", actionItem, \"*/\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 2\n  }, this);\n}\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["styles","Input","TextField","useState","jsxDEV","_jsxDEV","isClicked","btnIsClicked","Card","props","english","transcription","russian","tags","boolean","actionItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","class","type","value","_c","$RefreshReg$"],"sources":["D:/Frontend/Week23/week23/proect_study/study/src/component/Card/Card.jsx"],"sourcesContent":["import  styles from './card.css'\r\nimport Input from '../Input/Input';\r\nimport TextField from '../TextField/TextField';\r\nimport { useState } from \"react\";\r\nconst [isClicked, btnIsClicked] = useState (false);\r\nfunction Card (props) {\r\n    const {english, transcription, russian, tags, boolean } = props;\r\n    \r\n    let actionItem;\r\n   /* if (props.boolean === 'true') \r\n    {\r\n        actionItem = <TextField english={english} transcription={transcription} russian={russian} tags={tags} boolean={boolean}/>\r\n    }\r\n    else  \r\n    {\r\n        actionItem = <Input/>;\r\n    }\r\n*/\r\n       return (\r\n <div>\r\n\r\n        <section >\r\n        isClicked ? (\r\n        <div className='row className1'> \r\n           <div className =\"cell\">{props.english}</div>\r\n           <div className =\"cell\"> {props.transcription}</div>\r\n            <div className =\"cell\"> {props.russian}</div>\r\n            <div className =\"cell\">{props.boolean}</div>\r\n            <div className =\"cell\"> <button className= 'btn_save'  > Save</button><button className= 'btn' onClick= {() => btnIsClicked(true)}></button></div>\r\n    \r\n        ):(\r\n            <div className =\"cell\"> <input class=\"inputText\" type=\"text\" value='english'></input></div>\r\n        <div className =\"cell\">  <input class=\"inputText\" type=\"text\" value='transcription'></input></div>\r\n        <div className =\"cell\"> <input class=\"inputText\" type=\"text\" value='russian'></input></div>\r\n        <div className =\"cell\"> <input class=\"inputText\" type=\"text\" value='boolean'></input></div>\r\n        <div className =\"cell\"> <button className= 'btn_save'> Save</button><button className= 'btn'></button></div>\r\n        )   </div>\r\n       </section>\r\n    \r\n        /* {actionItem}*/   \r\n    </div>\r\n    );\r\n}\r\nexport default Card"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}